import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/Home.module.css'
import React, {useEffect} from 'react'
import { RootState } from '@app/store'
import { useSelector, useDispatch } from 'react-redux'
import { decrement, increment } from '@features/counter/counterSlice'
// import {fetchUserById} from '@features/user/userSlice'
// import {actions} from '@features/user/userSlice'
import UseData from '@features/user/UseData'
import userReducer from '@store/user'

export default function Test() {
  const {actions} = userReducer
  // const abc = (state: RootState) => state
  // console.log("ðŸš€ ~ Test ~ abc", abc())
  const { users, } = UseData()
  console.log("ðŸš€ ~ Test ~ users", users)

  // const count = useSelector((state: RootState) => state.counter.value)
  const dispatch = useDispatch()
  const { loading, error } = useSelector((state: RootState) => state.users)
const getData = () => dispatch(actions.getRecruitingTournaments())
  useEffect(() => {
    getData()
  }, [])

  // const fetchOneUser = async (userId: number) => {
  //   try {
  //     const user = await dispatch(fetchUserById(userId)).unwrap()
  //     // console.log("ðŸš€ ~ fetchOneUser ~ user", user)
  //     // showToast('success', `Fetched ${user.name}`)
  //   } catch (err) {
  //     // showToast('error', `Fetch failed: ${err.message}`)
  //   }
  // }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js! </a>
        </h1>
        <div>
          <div>
            {/* {users.entities.length > 0 && users.entities.map(item => {
              return (
                <div key={item.id}>
                  {item.title}
                </div>
              )
            })}
            <button
              aria-label="Increment value"
              onClick={() => fetchOneUser(2)}
            >
              Increment
            </button>
            <button
              aria-label="Decrement value"
              onClick={() => dispatch(decrement())}
            >
              Decrement
            </button> */}
          </div>
        </div>
      </main>
    </div>
  )
}
